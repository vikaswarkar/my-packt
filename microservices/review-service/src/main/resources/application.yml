server.port: 7003
logging:
  level:
    root: INFO
    se.magnus: DEBUG
    '[org.hibernate.sql]': DEBUG
    '[org.hibernate.type.descriptor.sql]': TRACE

# Strongly recommend to set this property to "none" in a production environment!
spring:
  jpa:
    hibernate:
      ddl-auto: update
      
  datasource:
    url: jdbc:mysql://localhost/review-db
    username: user
    password: password
    hikari:
      initialization-fail-timeout: 60000
  application:
    name: review

spring.cloud.stream:
  defaultBinder: rabbit
  default.contentType: application/json
  bindings.input:
    destination: reviews
    group: reviewsGroup

spring.cloud.stream.bindings.input.consumer:
  maxAttempts: 3
  backOffInitialInterval: 500
  backOffMaxInterval: 1000
  backOffMultiplier: 2.0

spring.cloud.stream.rabbit.bindings.input.consumer:
  autoBindDlq: true
  republishToDlq: true

spring.cloud.stream.kafka.bindings.input.consumer:
  enableDlq: true

spring.cloud.stream.kafka.binder:
  brokers: 127.0.0.1
  defaultBrokerPort: 9092

spring.rabbitmq:
  host: 127.0.0.1
  port: 5672
  username: guest
  password: guest

management.endpoint.health.show-details: "ALWAYS"
management.endpoints.web.exposure.include: "*"

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
    initialInstanceInfoReplicationIntervalSeconds: 5
    registryFetchIntervalSeconds: 5
  instance:
    leaseRenewalIntervalInSeconds: 5
    leaseExpirationDurationInSeconds: 5

---

spring.profiles: docker

spring:
  datasource:
    url: jdbc:mysql://mysql/review-db
    
server:
  port: 8080

spring.rabbitmq.host: rabbitmq

spring.cloud.stream.kafka.binder.brokers: kafka

eureka.client.serviceUrl.defaultZone: http://eureka:8761/eureka/